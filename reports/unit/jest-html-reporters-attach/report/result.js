window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":6,"startTime":1717755677209,"success":false,"testResults":[{"numFailingTests":3,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1717755678816,"runtime":1565,"slow":false,"start":1717755677251},"testFilePath":"/Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuizService with lesson, lessonBlock, and folder › should update a quiz\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 |\u001b[39m     \u001b[36mconst\u001b[39m updatedQuiz \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mupdateQuiz(existingQuiz\u001b[33m.\u001b[39mid\u001b[33m,\u001b[39m quizInput)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 139 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 140 |\u001b[39m     expect(updatedQuiz)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 |\u001b[39m     expect(updatedQuiz\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Updated Test MULTIPLE_CHOICE Quiz\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 143 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/quiz/quiz.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:140:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuizService with lesson, lessonBlock, and folder › should delete a quiz\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 163 |\u001b[39m     \u001b[36mconst\u001b[39m deletedQuiz \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mdeleteQuiz(newQuiz\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 164 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 165 |\u001b[39m     expect(deletedQuiz)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 166 |\u001b[39m     expect(deletedQuiz\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mtoEqual(newQuiz\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/quiz/quiz.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:165:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuizService with lesson, lessonBlock, and folder › should save quiz results\u001b[39m\u001b[22m\n\n    User with id 1 does not exist.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  96 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  97 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39muserExists) {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  98 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`User with id ${userId} does not exist.`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  99 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 |\u001b[39m       \u001b[90m// Проверяем, существует ли курс с указанным courseId (если он передан)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2msrc/quiz/quiz.service.ts\u001b[2m:98:15\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat async Proxy._transactionWithCallback (\u001b[22m\u001b[2mnode_modules/.pnpm/@prisma+client@5.9.0/node_modules/@prisma/client/runtime/library.js\u001b[2m:131:8372)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat async QuizService.saveQuizResult (\u001b[22m\u001b[2msrc/quiz/quiz.service.ts\u001b[2m:92:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat async Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/quiz/quiz.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:236:24)\u001b[22m\u001b[2m\u001b[22m\n\n\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n    PrismaClientKnownRequestError: \n    Invalid `prisma.quiz.deleteMany()` invocation in\n    /Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.spec.ts:68:23\n\n      65   },\n      66 });\n      67 \n    → 68 await prisma.quiz.deleteMany(\n    Foreign key constraint failed on the field: `Question_quiz_id_fkey (index)`\n\n    \u001b[0m \u001b[90m 66 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 67 |\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 |\u001b[39m     \u001b[36mawait\u001b[39m prisma\u001b[33m.\u001b[39mquiz\u001b[33m.\u001b[39mdeleteMany({\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 69 |\u001b[39m       where\u001b[33m:\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 70 |\u001b[39m         lessonBlockId\u001b[33m:\u001b[39m lessonBlock\u001b[33m.\u001b[39mid\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 71 |\u001b[39m       }\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat ai.handleRequestError (\u001b[22mnode_modules/.pnpm/@prisma+client@5.9.0/node_modules/@prisma/client/runtime/library.js\u001b[2m:126:6775)\u001b[22m\n      \u001b[2mat ai.handleAndLogRequestError (\u001b[22mnode_modules/.pnpm/@prisma+client@5.9.0/node_modules/@prisma/client/runtime/library.js\u001b[2m:126:6109)\u001b[22m\n      \u001b[2mat ai.request (\u001b[22mnode_modules/.pnpm/@prisma+client@5.9.0/node_modules/@prisma/client/runtime/library.js\u001b[2m:126:5817)\u001b[22m\n      \u001b[2mat async l (\u001b[22mnode_modules/.pnpm/@prisma+client@5.9.0/node_modules/@prisma/client/runtime/library.js\u001b[2m:131:9709)\u001b[22m\n      \u001b[2mat async Object.<anonymous> (\u001b[22msrc/quiz/quiz.service.spec.ts\u001b[2m:68:5)\u001b[22m\n","testResults":[{"ancestorTitles":["QuizService with lesson, lessonBlock, and folder"],"duration":30,"failureMessages":[],"fullName":"QuizService with lesson, lessonBlock, and folder should create a quiz and link it to a lessonBlock within a lesson and folder","status":"passed","title":"should create a quiz and link it to a lessonBlock within a lesson and folder"},{"ancestorTitles":["QuizService with lesson, lessonBlock, and folder"],"duration":14,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.spec.ts:140:25)"],"fullName":"QuizService with lesson, lessonBlock, and folder should update a quiz","status":"failed","title":"should update a quiz"},{"ancestorTitles":["QuizService with lesson, lessonBlock, and folder"],"duration":12,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.spec.ts:165:25)"],"fullName":"QuizService with lesson, lessonBlock, and folder should delete a quiz","status":"failed","title":"should delete a quiz"},{"ancestorTitles":["QuizService with lesson, lessonBlock, and folder"],"duration":5,"failureMessages":[],"fullName":"QuizService with lesson, lessonBlock, and folder should find all quizzes","status":"passed","title":"should find all quizzes"},{"ancestorTitles":["QuizService with lesson, lessonBlock, and folder"],"duration":9,"failureMessages":[],"fullName":"QuizService with lesson, lessonBlock, and folder should find a quiz by id","status":"passed","title":"should find a quiz by id"},{"ancestorTitles":["QuizService with lesson, lessonBlock, and folder"],"duration":10,"failureMessages":["Error: User with id 1 does not exist.\n    at /Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.ts:98:15\n    at async Proxy._transactionWithCallback (/Users/holfizz/Developer/whai/backend/node_modules/.pnpm/@prisma+client@5.9.0/node_modules/@prisma/client/runtime/library.js:131:8372)\n    at async QuizService.saveQuizResult (/Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.ts:92:12)\n    at async Object.<anonymous> (/Users/holfizz/Developer/whai/backend/src/quiz/quiz.service.spec.ts:236:24)"],"fullName":"QuizService with lesson, lessonBlock, and folder should save quiz results","status":"failed","title":"should save quiz results"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"/Users/holfizz/Developer/whai/backend/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":["./quiz.service.spec.ts"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/holfizz/Developer/whai/backend/node_modules/.pnpm/jest-html-reporters@3.1.7/node_modules/jest-html-reporters/index.js",{"publicPath":"<rootDir>/reports/unit","filename":"report.html","openReport":false}]],"rootDir":"/Users/holfizz/Developer/whai/backend","runTestsByPath":false,"seed":575398657,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"./quiz.service.spec.ts","testSequencer":"/Users/holfizz/Developer/whai/backend/node_modules/.pnpm/@jest+test-sequencer@29.7.0/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1717755678819,"_reporterOptions":{"publicPath":"/Users/holfizz/Developer/whai/backend/reports/unit","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})